
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Lovish_Arora
 */
public class UserSearchFrame extends javax.swing.JFrame {

    /**
     * Creates new form UserSearchFrame
     */
    String user;

    public UserSearchFrame(String username) {
        initComponents();
        
        Dimension d = new Dimension(Toolkit.getDefaultToolkit().getScreenSize());
        System.out.println(d);
        ImageIcon i1 = new ImageIcon("src/uploads/instapicbg.jpg");
//        Image img = i1.getImage().getScaledInstance(photolb.getWidth(), photolb.getHeight(), Image.SCALE_SMOOTH);
        Image img = i1.getImage().getScaledInstance(d.width, d.height, Image.SCALE_SMOOTH);
        photolb.setBounds(0, 0, d.width, d.height);
        ImageIcon i2 = new ImageIcon(img);
        photolb.setIcon(i2);

//        getContentPane().setBackground(Color.blue);
        setSize(d.width, d.height);
        setVisible(true);

        user = username;

        jScrollPane1.setSize(500, 400);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jkeyword = new javax.swing.JTextField();
        jsearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        photolb = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Search User Here!");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(200, 20, 120, 25);

        jkeyword.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jkeyword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jkeywordActionPerformed(evt);
            }
        });
        getContentPane().add(jkeyword);
        jkeyword.setBounds(50, 60, 220, 30);

        jsearch.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jsearch.setText("Search");
        jsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsearchActionPerformed(evt);
            }
        });
        getContentPane().add(jsearch);
        jsearch.setBounds(290, 60, 100, 30);

        mainPanel.setBackground(new java.awt.Color(204, 255, 255));
        mainPanel.setLayout(null);
        jScrollPane1.setViewportView(mainPanel);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 110, 340, 260);

        photolb.setText("jLabel2");
        getContentPane().add(photolb);
        photolb.setBounds(10, 30, 38, 16);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jkeywordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jkeywordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jkeywordActionPerformed

    private void jsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsearchActionPerformed
        // TODO add your handling code here:

        new Thread(new Runnable() {
            @Override
            public void run() {

                String keyword = jkeyword.getText();
                //check if empty
                if (keyword.isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "All fieds are required.");
                } else {
                    try {
                        HttpResponse<String> res = Unirest.get(Global.ipAddress + "usersearch")
                                .queryString("username", user)
                                .queryString("keyword", keyword)
                                .asString();
                        if (res.getStatus() == 200) {
                            String response = res.getBody();
                            if (response.equals("FAILS")) {
                                JOptionPane.showMessageDialog(rootPane, "NO such user exists");

                            } else {
                                System.out.println("Response is ---->" + response);
                            }

                            StringTokenizer st = new StringTokenizer(response, "~~");

                            int count = st.countTokens();
                            //int obj[]=new int[count];
                            int x = 10, y = 10;
                            SearchUserPanelDesign obj[] = new SearchUserPanelDesign[count];
                            mainPanel.removeAll();
                            mainPanel.repaint();
                            for (int i = 0; i < count; i++) {
                                final int a = i;
                                String userInfo = st.nextToken();
                                StringTokenizer st2 = new StringTokenizer(userInfo, ";;");
                                String username = st2.nextToken();
                                String photo = st2.nextToken();
                                String email = st2.nextToken();
                                String ifFollow = st2.nextToken();
                                

                                System.out.println("useranme---->" + username);
                                System.out.println("photo---->" + photo);
                                System.out.println("email--->" + email);
                                obj[i] = new SearchUserPanelDesign();

                                obj[i].jusername.setText(username);
                                obj[i].jphoto.setText(photo);
                                obj[i].jemail.setText(email);
                                try {
                            URL url = new URL(Global.ipAddress + "GetResource/" + photo);
                            //System.out.println("Path of Image Stored in server side--------------" + url);
                            BufferedImage img = ImageIO.read(url);
                            Image resizedimage = img.getScaledInstance(obj[i].jphoto.getWidth(), obj[i].jphoto.getHeight(), Image.SCALE_SMOOTH);
                            obj[i].jphoto.setIcon(new ImageIcon(resizedimage));

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                                if(ifFollow.equals("yes")){
                                obj[i].jfollow.setText("Following");
                                }
                                else{
                                obj[i].jfollow.setText("Follow");
                                }
                                obj[i].jfollow.addActionListener(new ActionListener() {
                                    @Override
                                    public void actionPerformed(ActionEvent e) {
                                        try {
                                            HttpResponse<String> res = Unirest.get(Global.ipAddress + "userfollow")
                                                    .queryString("followto", username)
                                                    .queryString("followby", user)
                                                    .asString();

                                            if (res.getStatus() == 200) {
                                                String response = res.getBody();
                                                if (response.equals("SUCCESS")) {
                                                    JOptionPane.showMessageDialog(rootPane, "Follow Successfully");
                                                    obj[a].jfollow.setText("Following");
                                                } else {
                                                    JOptionPane.showMessageDialog(rootPane, "Unfollow Successfully");
                                                    obj[a].jfollow.setText("Follow");
                                                }
                                            }

                                        } catch (Exception ex) {
                                            ex.printStackTrace();
                                        }

                                    }

                                });

                                obj[i].setBounds(x, y, 450, 130);
                                mainPanel.add(obj[i]);
                                y += 150;
                                mainPanel.repaint();
                                obj[i].repaint();
                            }
                            mainPanel.setPreferredSize(new Dimension(450, count * 150));
                            /*
                    String email = st.nextToken();
                    String phoneno = st.nextToken();
                    String photo = st.nextToken();
                    juseranme jemail
                    .setText(email);
                    jphoneno.setText(phoneno);
                    jphoto.setText(photo);
                             */
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }

            }
        }).start();


    }//GEN-LAST:event_jsearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserSearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserSearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserSearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserSearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserSearchFrame("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jkeyword;
    private javax.swing.JButton jsearch;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel photolb;
    // End of variables declaration//GEN-END:variables
}
